{"version":3,"file":"Dialog.stories-f5c7cc95.js","sources":["../../packages/atoms/src/hooks/useDialog.ts"],"sourcesContent":["import { useState, useCallback } from \"react\";\n\n/**\n * `useDialog` is a hook for controlling the open state of a `Dialog` component.\n *\n * @example\n * ```jsx\n * const { isOpen, openDialog, closeDialog } = useDialog();\n *\n * return (\n *   <div>\n *     <button onClick={openDialog}>Open Dialog</button>\n *     <Dialog isOpen={isOpen} onRequestClose={closeDialog}>\n *       <p>This is a dialog</p>\n *     </Dialog>\n *   </div>\n * );\n * ```\n *\n * @returns {object} An object containing the `isOpen` state and the `openDialog` and `closeDialog` functions.\n */\n\ninterface UseDialogResult {\n  isOpen: boolean;\n  openDialog: () => void;\n  closeDialog: () => void;\n}\n\nexport const useDialog = (initialState: boolean = false): UseDialogResult => {\n  const [isOpen, setIsOpen] = useState(initialState);\n\n  const openDialog = useCallback(() => {\n    setIsOpen(true);\n  }, []);\n\n  const closeDialog = useCallback(() => {\n    setIsOpen(false);\n  }, []);\n\n  return {\n    isOpen,\n    openDialog,\n    closeDialog,\n  };\n};\n"],"names":["useDialog","initialState","isOpen","setIsOpen","useState","openDialog","useCallback","closeDialog"],"mappings":"sfA4Ba,MAAAA,EAAY,CAACC,EAAwB,KAA2B,CAC3E,KAAM,CAACC,EAAQC,CAAS,EAAIC,WAASH,CAAY,EAE3CI,EAAaC,EAAAA,YAAY,IAAM,CACnCH,EAAU,EAAI,CAChB,EAAG,CAAE,CAAA,EAECI,EAAcD,EAAAA,YAAY,IAAM,CACpCH,EAAU,EAAK,CACjB,EAAG,CAAE,CAAA,EAEE,MAAA,CACL,OAAAD,EACA,WAAAG,EACA,YAAAE,CAAA,CAEJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}