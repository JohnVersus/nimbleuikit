{"version":3,"file":"IntlText-664a7174.js","sources":["../../packages/@nimbleuikit/atoms/src/lib/IntlText/IntlText.tsx"],"sourcesContent":["import { IntlTextProps } from \".\";\nimport { Text } from \"../Text\";\n\nconst IntlText: React.FC<IntlTextProps> = (props) => {\n  const { formatType, formatOptions, value, locales, ...textProps } = props;\n\n  let formattedValue: string = \"\";\n\n  switch (formatType) {\n    case \"number\":\n      formattedValue = new Intl.NumberFormat(locales, formatOptions).format(\n        Number(value)\n      );\n      break;\n    case \"date\":\n      formattedValue = new Intl.DateTimeFormat(locales, formatOptions).format(\n        new Date(String(value))\n      );\n      break;\n    case \"relativeTime\":\n      formattedValue = new Intl.RelativeTimeFormat(\n        locales,\n        formatOptions\n      ).format(Number(value), props.unit);\n      break;\n  }\n\n  return <Text {...textProps}>{formattedValue}</Text>;\n};\n\nexport default IntlText;\n"],"names":["IntlText","props","formatType","formatOptions","value","locales","textProps","formattedValue","jsx","Text"],"mappings":"qFAGA,MAAAA,EAAAC,GAAA,CACE,KAAA,CAAA,WAAAC,EAAA,cAAAC,EAAA,MAAAC,EAAA,QAAAC,EAAA,GAAAC,CAAA,EAAAL,EAEA,IAAAM,EAAA,GAEA,OAAAL,EAAA,CAAoB,IAAA,SAEhBK,EAAA,IAAA,KAAA,aAAAF,EAAAF,CAAA,EAAA,OAA+D,OAAAC,CAAA,CACjD,EAEd,MAAA,IAAA,OAEAG,EAAA,IAAA,KAAA,eAAAF,EAAAF,CAAA,EAAA,OAAiE,IAAA,KAAA,OAAAC,CAAA,CAAA,CACzC,EAExB,MAAA,IAAA,eAEAG,EAAA,IAAA,KAAA,mBAA0BF,EACxBF,CACA,EAAA,OAAA,OAAAC,CAAA,EAAAH,EAAA,IAAA,EAEF,KAAA,CAGJ,OAAAO,EAAAC,EAAA,CAAA,GAAAH,EAAA,SAAAC,CAAA,CAAA,CACF;"}